{"ast":null,"code":"var _jsxFileName = \"E:\\\\Template\\\\project_master_list\\\\frontend\\\\src\\\\components\\\\ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport fetchProjectName from '../utils/fetchProjectName';\nimport '../styles/ProjectDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const [projectName, setProjectName] = useState('');\n  const [sections, setSections] = useState([]);\n  const [newSectionName, setNewSectionName] = useState('');\n  const [newSubsectionName, setNewSubsectionName] = useState('');\n  const [currentSectionId, setCurrentSectionId] = useState(null);\n  const [isSectionModalOpen, setIsSectionModalOpen] = useState(false);\n  const [isSubsectionModalOpen, setIsSubsectionModalOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (projectId) {\n      fetchProjectDetails();\n    }\n  }, [projectId]);\n  const fetchProjectDetails = async () => {\n    try {\n      console.log('Fetching project name...');\n      const projectName = await fetchProjectName(projectId);\n      console.log('Fetched project name:', projectName);\n      setProjectName(projectName);\n      await fetchSections(Number(projectId));\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching project details:', error);\n      setError('Failed to fetch project details');\n      setLoading(false);\n    }\n  };\n  const fetchSections = async numericProjectId => {\n    try {\n      console.log('Fetching sections...');\n      const response = await axios.get(`http://localhost:5000/api/projects/${numericProjectId}/sections`);\n      console.log('Fetched sections:', response.data);\n      const sectionsWithSubsections = await Promise.all(response.data.map(async section => {\n        const subsectionsResponse = await axios.get(`http://localhost:5000/api/sections/${section.section_id}/subsections`);\n        console.log(`Fetched subsections for section ${section.section_id}:`, subsectionsResponse.data);\n        const subsectionsWithDocuments = await Promise.all(subsectionsResponse.data.map(async subsection => {\n          const documentsResponse = await axios.get(`http://localhost:5000/api/subsections/${subsection.subsection_id}/documents`);\n          console.log(`Fetched documents for subsection ${subsection.subsection_id}:`, documentsResponse.data);\n          return {\n            ...subsection,\n            documents: documentsResponse.data\n          };\n        }));\n        return {\n          ...section,\n          subsections: subsectionsWithDocuments\n        };\n      }));\n      setSections(sectionsWithSubsections);\n    } catch (error) {\n      console.error('Error fetching sections:', error);\n      throw error; // re-throw the error to be caught in fetchProjectDetails\n    }\n  };\n  const handleAddSection = async () => {\n    try {\n      const numericProjectId = Number(projectId);\n      const response = await axios.post('http://localhost:5000/api/sections', {\n        section_name: newSectionName,\n        project_id: numericProjectId\n      });\n      const newSection = response.data;\n      setSections([...sections, {\n        ...newSection,\n        subsections: []\n      }]);\n      setIsSectionModalOpen(false);\n      setNewSectionName('');\n    } catch (error) {\n      console.error('Error adding section:', error);\n    }\n  };\n  const handleAddSubsection = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/subsections', {\n        subsection_name: newSubsectionName,\n        section_id: currentSectionId\n      });\n      const newSubsection = response.data;\n      setSections(prevSections => {\n        return prevSections.map(section => {\n          if (section.section_id === currentSectionId) {\n            return {\n              ...section,\n              subsections: [...section.subsections, {\n                ...newSubsection,\n                documents: []\n              }]\n            };\n          }\n          return section;\n        });\n      });\n      setIsSubsectionModalOpen(false);\n      setNewSubsectionName('');\n    } catch (error) {\n      console.error('Error adding subsection:', error);\n    }\n  };\n  const handleAddDocument = async subsectionId => {\n    const docName = prompt('Enter document name:');\n    if (docName) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/documents', {\n          document_name: docName,\n          subsection_id: subsectionId\n        });\n        const newDocument = response.data;\n        setSections(prevSections => {\n          return prevSections.map(section => {\n            const updatedSubsections = section.subsections.map(subsection => {\n              if (subsection.subsection_id === subsectionId) {\n                return {\n                  ...subsection,\n                  documents: [...subsection.documents, newDocument]\n                };\n              }\n              return subsection;\n            });\n            return {\n              ...section,\n              subsections: updatedSubsections\n            };\n          });\n        });\n      } catch (error) {\n        console.error('Error adding document:', error);\n      }\n    }\n  };\n  const handleBack = () => {\n    navigate(-1); // Navigate back one history entry\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"project-title\",\n      children: [\"Project Title: \", projectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSectionModalOpen(true),\n        children: \"Add Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: section.section_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCurrentSectionId(section.section_id);\n            setIsSubsectionModalOpen(true);\n          },\n          children: \"Add Subsection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"subsection-list\",\n          children: section.subsections.map(subsection => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: subsection.subsection_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-document-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddDocument(subsection.subsection_id),\n                children: \"Add Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: subsection.documents.map(document => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: document.document_name\n              }, document.document_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, subsection.subsection_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, section.section_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), isSectionModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSectionName,\n        onChange: e => setNewSectionName(e.target.value),\n        className: \"section-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSection,\n        className: \"add-section-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSectionModalOpen(false),\n        className: \"add-section-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), isSubsectionModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-subsection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Subsection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubsectionName,\n        onChange: e => setNewSubsectionName(e.target.value),\n        className: \"subsection-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSubsection,\n        className: \"add-subsection-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSubsectionModalOpen(false),\n        className: \"add-subsection-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"u6DAewHdw7phg0eLOB+NNb7a4C0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","fetchProjectName","jsxDEV","_jsxDEV","ProjectDetail","_s","projectId","navigate","projectName","setProjectName","sections","setSections","newSectionName","setNewSectionName","newSubsectionName","setNewSubsectionName","currentSectionId","setCurrentSectionId","isSectionModalOpen","setIsSectionModalOpen","isSubsectionModalOpen","setIsSubsectionModalOpen","loading","setLoading","error","setError","fetchProjectDetails","console","log","fetchSections","Number","numericProjectId","response","get","data","sectionsWithSubsections","Promise","all","map","section","subsectionsResponse","section_id","subsectionsWithDocuments","subsection","documentsResponse","subsection_id","documents","subsections","handleAddSection","post","section_name","project_id","newSection","handleAddSubsection","subsection_name","newSubsection","prevSections","handleAddDocument","subsectionId","docName","prompt","document_name","newDocument","updatedSubsections","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","document","document_id","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/Template/project_master_list/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport fetchProjectName from '../utils/fetchProjectName';\r\nimport '../styles/ProjectDetail.css';\r\n\r\nconst ProjectDetail = () => {\r\n  const { projectId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [projectName, setProjectName] = useState('');\r\n  const [sections, setSections] = useState([]);\r\n  const [newSectionName, setNewSectionName] = useState('');\r\n  const [newSubsectionName, setNewSubsectionName] = useState('');\r\n  const [currentSectionId, setCurrentSectionId] = useState(null);\r\n  const [isSectionModalOpen, setIsSectionModalOpen] = useState(false);\r\n  const [isSubsectionModalOpen, setIsSubsectionModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      fetchProjectDetails();\r\n    }\r\n  }, [projectId]);\r\n\r\n  const fetchProjectDetails = async () => {\r\n    try {\r\n      console.log('Fetching project name...');\r\n      const projectName = await fetchProjectName(projectId);\r\n      console.log('Fetched project name:', projectName);\r\n      setProjectName(projectName);\r\n      await fetchSections(Number(projectId));\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching project details:', error);\r\n      setError('Failed to fetch project details');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSections = async (numericProjectId) => {\r\n    try {\r\n      console.log('Fetching sections...');\r\n      const response = await axios.get(`http://localhost:5000/api/projects/${numericProjectId}/sections`);\r\n      console.log('Fetched sections:', response.data);\r\n      const sectionsWithSubsections = await Promise.all(response.data.map(async (section) => {\r\n        const subsectionsResponse = await axios.get(`http://localhost:5000/api/sections/${section.section_id}/subsections`);\r\n        console.log(`Fetched subsections for section ${section.section_id}:`, subsectionsResponse.data);\r\n        const subsectionsWithDocuments = await Promise.all(subsectionsResponse.data.map(async (subsection) => {\r\n          const documentsResponse = await axios.get(`http://localhost:5000/api/subsections/${subsection.subsection_id}/documents`);\r\n          console.log(`Fetched documents for subsection ${subsection.subsection_id}:`, documentsResponse.data);\r\n          return { ...subsection, documents: documentsResponse.data };\r\n        }));\r\n        return { ...section, subsections: subsectionsWithDocuments };\r\n      }));\r\n      setSections(sectionsWithSubsections);\r\n    } catch (error) {\r\n      console.error('Error fetching sections:', error);\r\n      throw error; // re-throw the error to be caught in fetchProjectDetails\r\n    }\r\n  };\r\n\r\n  const handleAddSection = async () => {\r\n    try {\r\n      const numericProjectId = Number(projectId);\r\n      const response = await axios.post('http://localhost:5000/api/sections', { section_name: newSectionName, project_id: numericProjectId });\r\n      const newSection = response.data;\r\n      setSections([...sections, { ...newSection, subsections: [] }]);\r\n      setIsSectionModalOpen(false);\r\n      setNewSectionName('');\r\n    } catch (error) {\r\n      console.error('Error adding section:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSubsection = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/subsections', { subsection_name: newSubsectionName, section_id: currentSectionId });\r\n      const newSubsection = response.data;\r\n      setSections(prevSections => {\r\n        return prevSections.map(section => {\r\n          if (section.section_id === currentSectionId) {\r\n            return { ...section, subsections: [...section.subsections, { ...newSubsection, documents: [] }] };\r\n          }\r\n          return section;\r\n        });\r\n      });\r\n      setIsSubsectionModalOpen(false);\r\n      setNewSubsectionName('');\r\n    } catch (error) {\r\n      console.error('Error adding subsection:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddDocument = async (subsectionId) => {\r\n    const docName = prompt('Enter document name:');\r\n    if (docName) {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/documents', { document_name: docName, subsection_id: subsectionId });\r\n        const newDocument = response.data;\r\n        setSections(prevSections => {\r\n          return prevSections.map(section => {\r\n            const updatedSubsections = section.subsections.map(subsection => {\r\n              if (subsection.subsection_id === subsectionId) {\r\n                return { ...subsection, documents: [...subsection.documents, newDocument] };\r\n              }\r\n              return subsection;\r\n            });\r\n            return { ...section, subsections: updatedSubsections };\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.error('Error adding document:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(-1); // Navigate back one history entry\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-detail-container\">\r\n      <h2 className=\"project-title\">Project Title: {projectName}</h2>\r\n      <button onClick={handleBack}>Back</button>\r\n\r\n      <div className=\"sections-container\">\r\n        <button onClick={() => setIsSectionModalOpen(true)}>Add Section</button>\r\n        {sections.map(section => (\r\n          <div key={section.section_id} className=\"section\">\r\n            <h2>{section.section_name}</h2>\r\n            <button onClick={() => { setCurrentSectionId(section.section_id); setIsSubsectionModalOpen(true); }}>Add Subsection</button>\r\n            \r\n            <ul className=\"subsection-list\">\r\n              {section.subsections.map(subsection => (\r\n                <li key={subsection.subsection_id} className=\"subsection\">\r\n                  <h3>{subsection.subsection_name}</h3>\r\n                  <div className=\"add-document-container\">\r\n                    <button onClick={() => handleAddDocument(subsection.subsection_id)}>Add Document</button>\r\n                  </div>\r\n\r\n                  <ul>\r\n                    {subsection.documents.map(document => (\r\n                      <li key={document.document_id}>{document.document_name}</li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {isSectionModalOpen && (\r\n        <div className=\"add-section-container\">\r\n          <h3>Add Section</h3>\r\n          <input \r\n            type=\"text\" \r\n            value={newSectionName} \r\n            onChange={(e) => setNewSectionName(e.target.value)} \r\n            className=\"section-input\"\r\n          />\r\n          <button onClick={handleAddSection} className=\"add-section-button\">Save</button>\r\n          <button onClick={() => setIsSectionModalOpen(false)} className=\"add-section-button\">Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      {isSubsectionModalOpen && (\r\n        <div className=\"add-subsection\">\r\n          <h3>Add Subsection</h3>\r\n          <input \r\n            type=\"text\" \r\n            value={newSubsectionName} \r\n            onChange={(e) => setNewSubsectionName(e.target.value)} \r\n            className=\"subsection-input\"\r\n          />\r\n          <button onClick={handleAddSubsection} className=\"add-subsection-button\">Save</button>\r\n          <button onClick={() => setIsSubsectionModalOpen(false)} className=\"add-subsection-button\">Cancel</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}