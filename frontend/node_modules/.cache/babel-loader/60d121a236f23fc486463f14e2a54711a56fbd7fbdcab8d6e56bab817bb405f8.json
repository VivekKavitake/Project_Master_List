{"ast":null,"code":"var _jsxFileName = \"E:\\\\Template\\\\project_master_list\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/components/Home.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectTable from './ProjectTable';\nimport ProjectFormModal from './ProjectFormModal';\nimport '../styles/Home.css'; // Ensure this file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Function to capitalize the first letter of a string\n  const capitalizeFirstLetter = str => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n  const fetchProjects = async () => {\n    try {\n      console.log('Fetching projects...');\n      const response = await axios.get('http://localhost:5000/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  const addProject = async projectName => {\n    try {\n      const capitalizedProjectName = capitalizeFirstLetter(projectName); // Capitalize project name\n      const newProjectData = {\n        project_name: capitalizedProjectName\n      }; // Use the capitalized project name in the request data\n      console.log('Adding new project:', newProjectData);\n      const response = await axios.post('http://localhost:5000/api/projects', newProjectData);\n      const newProject = response.data;\n      console.log('New project added:', newProject);\n      setProjects([...projects, newProject]);\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error adding project:', error);\n    }\n  };\n  const deleteProject = async projectId => {\n    try {\n      console.log('Deleting project with ID:', projectId);\n      await axios.delete(`http://localhost:5000/api/projects/${projectId}`);\n      console.log('Project deleted:', projectId);\n      setProjects(projects.filter(project => project.project_id !== projectId));\n    } catch (error) {\n      console.error('Error deleting project:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Master List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsModalOpen(true),\n      children: \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectTable, {\n      projects: projects,\n      deleteProject: deleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ProjectFormModal, {\n      onClose: () => setIsModalOpen(false),\n      onSave: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Ha4UM2d8X6J3RjDVcsvRO1wGDJc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectTable","ProjectFormModal","jsxDEV","_jsxDEV","Home","_s","projects","setProjects","isModalOpen","setIsModalOpen","fetchProjects","capitalizeFirstLetter","str","charAt","toUpperCase","slice","console","log","response","get","data","error","addProject","projectName","capitalizedProjectName","newProjectData","project_name","post","newProject","deleteProject","projectId","delete","filter","project","project_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","onSave","_c","$RefreshReg$"],"sources":["E:/Template/project_master_list/frontend/src/components/Home.js"],"sourcesContent":["// src/components/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectTable from './ProjectTable';\r\nimport ProjectFormModal from './ProjectFormModal';\r\nimport '../styles/Home.css'; // Ensure this file exists\r\n\r\nconst Home = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n   // Function to capitalize the first letter of a string\r\n   const capitalizeFirstLetter = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      console.log('Fetching projects...');\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      console.log('Fetched projects:', response.data);\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching projects:', error);\r\n    }\r\n  };\r\n\r\n  const addProject = async (projectName) => {\r\n    try {\r\n      const capitalizedProjectName = capitalizeFirstLetter(projectName); // Capitalize project name\r\n      const newProjectData = { project_name: capitalizedProjectName }; // Use the capitalized project name in the request data\r\n      console.log('Adding new project:', newProjectData);\r\n      const response = await axios.post('http://localhost:5000/api/projects', newProjectData);\r\n      const newProject = response.data;\r\n      console.log('New project added:', newProject);\r\n      setProjects([...projects, newProject]);\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error adding project:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProject = async (projectId) => {\r\n    try {\r\n      console.log('Deleting project with ID:', projectId);\r\n      await axios.delete(`http://localhost:5000/api/projects/${projectId}`);\r\n      console.log('Project deleted:', projectId);\r\n      setProjects(projects.filter(project => project.project_id !== projectId));\r\n    } catch (error) {\r\n      console.error('Error deleting project:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>Project Master List</h1>\r\n      <button onClick={() => setIsModalOpen(true)}>Add New Project</button>\r\n      <ProjectTable projects={projects} deleteProject={deleteProject} />\r\n      {isModalOpen && (\r\n        <ProjectFormModal\r\n          onClose={() => setIsModalOpen(false)}\r\n          onSave={addProject}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}