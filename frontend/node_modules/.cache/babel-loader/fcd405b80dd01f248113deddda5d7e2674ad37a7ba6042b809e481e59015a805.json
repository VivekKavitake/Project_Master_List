{"ast":null,"code":"var _jsxFileName = \"E:\\\\Template\\\\project_master_list\\\\frontend\\\\src\\\\components\\\\ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const [projectName, setProjectName] = useState('');\n  const [sections, setSections] = useState([]);\n  const [newSectionName, setNewSectionName] = useState('');\n  const [newSubsectionName, setNewSubsectionName] = useState('');\n  const [newDocumentName, setNewDocumentName] = useState('');\n  useEffect(() => {\n    if (projectId) {\n      fetchProjectDetails();\n    }\n  }, [projectId]);\n  const fetchProjectDetails = async () => {\n    try {\n      // Fetch project details\n      const projectResponse = await axios.get(`/api/projects/${projectId}`);\n      setProjectName(projectResponse.data.project_name);\n\n      // Fetch sections\n      const sectionsResponse = await axios.get(`/api/projects/${projectId}/sections`);\n      setSections(sectionsResponse.data);\n    } catch (error) {\n      console.error('Error fetching project details:', error);\n    }\n  };\n  const handleAddSection = async () => {\n    try {\n      // Add new section\n      const response = await axios.post('/api/sections', {\n        section_name: newSectionName,\n        project_id: projectId\n      });\n      const newSection = response.data;\n      setSections([...sections, newSection]);\n      setNewSectionName('');\n    } catch (error) {\n      console.error('Error adding section:', error);\n    }\n  };\n  const handleAddSubsection = async sectionId => {\n    try {\n      // Add new subsection\n      const response = await axios.post('/api/subsections', {\n        subsection_name: newSubsectionName,\n        section_id: sectionId\n      });\n      const newSubsection = response.data;\n      setSections(prevSections => {\n        return prevSections.map(section => {\n          if (section.section_id === sectionId) {\n            return {\n              ...section,\n              subsections: [...section.subsections, newSubsection]\n            };\n          }\n          return section;\n        });\n      });\n      setNewSubsectionName('');\n    } catch (error) {\n      console.error('Error adding subsection:', error);\n    }\n  };\n  const handleAddDocument = async subsectionId => {\n    try {\n      // Add new document\n      const response = await axios.post('/api/documents', {\n        document_name: newDocumentName,\n        subsection_id: subsectionId\n      });\n      const newDocument = response.data;\n      setSections(prevSections => {\n        return prevSections.map(section => {\n          const updatedSubsections = section.subsections.map(subsection => {\n            if (subsection.subsection_id === subsectionId) {\n              return {\n                ...subsection,\n                documents: [...subsection.documents, newDocument]\n              };\n            }\n            return subsection;\n          });\n          return {\n            ...section,\n            subsections: updatedSubsections\n          };\n        });\n      });\n      setNewDocumentName('');\n    } catch (error) {\n      console.error('Error adding document:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Project Title: \", projectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: section.section_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [section.subsections.map(subsection => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [subsection.subsection_name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newDocumentName,\n              onChange: e => setNewDocumentName(e.target.value),\n              placeholder: \"Enter document name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddDocument(subsection.subsection_id),\n              children: \"Add Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, subsection.subsection_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newSubsectionName,\n              onChange: e => setNewSubsectionName(e.target.value),\n              placeholder: \"Enter subsection name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAddSubsection(section.section_id),\n              children: \"Add Subsection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, section.section_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSectionName,\n        onChange: e => setNewSectionName(e.target.value),\n        placeholder: \"Enter section name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSection,\n        children: \"Add Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"RZozaz8GnL2EkC6P2fKk888sfnw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ProjectDetail","_s","projectId","navigate","projectName","setProjectName","sections","setSections","newSectionName","setNewSectionName","newSubsectionName","setNewSubsectionName","newDocumentName","setNewDocumentName","fetchProjectDetails","projectResponse","get","data","project_name","sectionsResponse","error","console","handleAddSection","response","post","section_name","project_id","newSection","handleAddSubsection","sectionId","subsection_name","section_id","newSubsection","prevSections","map","section","subsections","handleAddDocument","subsectionId","document_name","subsection_id","newDocument","updatedSubsections","subsection","documents","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Template/project_master_list/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ProjectDetail = () => {\r\n  const { projectId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [projectName, setProjectName] = useState('');\r\n  const [sections, setSections] = useState([]);\r\n  const [newSectionName, setNewSectionName] = useState('');\r\n  const [newSubsectionName, setNewSubsectionName] = useState('');\r\n  const [newDocumentName, setNewDocumentName] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      fetchProjectDetails();\r\n    }\r\n  }, [projectId]);\r\n\r\n  const fetchProjectDetails = async () => {\r\n    try {\r\n      // Fetch project details\r\n      const projectResponse = await axios.get(`/api/projects/${projectId}`);\r\n      setProjectName(projectResponse.data.project_name);\r\n\r\n      // Fetch sections\r\n      const sectionsResponse = await axios.get(`/api/projects/${projectId}/sections`);\r\n      setSections(sectionsResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching project details:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSection = async () => {\r\n    try {\r\n      // Add new section\r\n      const response = await axios.post('/api/sections', { section_name: newSectionName, project_id: projectId });\r\n      const newSection = response.data;\r\n      setSections([...sections, newSection]);\r\n      setNewSectionName('');\r\n    } catch (error) {\r\n      console.error('Error adding section:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSubsection = async (sectionId) => {\r\n    try {\r\n      // Add new subsection\r\n      const response = await axios.post('/api/subsections', { subsection_name: newSubsectionName, section_id: sectionId });\r\n      const newSubsection = response.data;\r\n      setSections(prevSections => {\r\n        return prevSections.map(section => {\r\n          if (section.section_id === sectionId) {\r\n            return { ...section, subsections: [...section.subsections, newSubsection] };\r\n          }\r\n          return section;\r\n        });\r\n      });\r\n      setNewSubsectionName('');\r\n    } catch (error) {\r\n      console.error('Error adding subsection:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddDocument = async (subsectionId) => {\r\n    try {\r\n      // Add new document\r\n      const response = await axios.post('/api/documents', { document_name: newDocumentName, subsection_id: subsectionId });\r\n      const newDocument = response.data;\r\n      setSections(prevSections => {\r\n        return prevSections.map(section => {\r\n          const updatedSubsections = section.subsections.map(subsection => {\r\n            if (subsection.subsection_id === subsectionId) {\r\n              return { ...subsection, documents: [...subsection.documents, newDocument] };\r\n            }\r\n            return subsection;\r\n          });\r\n          return { ...section, subsections: updatedSubsections };\r\n        });\r\n      });\r\n      setNewDocumentName('');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Project Detail</h1>\r\n      <p>Project Title: {projectName}</p>\r\n      \r\n      {/* Render sections and subsections */}\r\n      <div>\r\n        {sections.map(section => (\r\n          <div key={section.section_id}>\r\n            <h2>{section.section_name}</h2>\r\n            <ul>\r\n              {section.subsections.map(subsection => (\r\n                <li key={subsection.subsection_id}>\r\n                  {subsection.subsection_name}\r\n                  {/* Button to add a new document */}\r\n                  <input \r\n                    type=\"text\" \r\n                    value={newDocumentName} \r\n                    onChange={(e) => setNewDocumentName(e.target.value)} \r\n                    placeholder=\"Enter document name\"\r\n                  />\r\n                  <button onClick={() => handleAddDocument(subsection.subsection_id)}>Add Document</button>\r\n                </li>\r\n              ))}\r\n              {/* Button to add a new subsection */}\r\n              <li>\r\n                <input \r\n                  type=\"text\" \r\n                  value={newSubsectionName} \r\n                  onChange={(e) => setNewSubsectionName(e.target.value)} \r\n                  placeholder=\"Enter subsection name\"\r\n                />\r\n                <button onClick={() => handleAddSubsection(section.section_id)}>Add Subsection</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Form to add a new section */}\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          value={newSectionName} \r\n          onChange={(e) => setNewSectionName(e.target.value)} \r\n          placeholder=\"Enter section name\"\r\n        />\r\n        <button onClick={handleAddSection}>Add Section</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}