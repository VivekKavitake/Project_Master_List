{"ast":null,"code":"var _jsxFileName = \"E:\\\\Template\\\\project_master_list\\\\frontend\\\\src\\\\components\\\\ProjectFormModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/ProjectFormModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectFormModal = ({\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [projectName, setProjectName] = useState('');\n  const saveNewProject = async projectName => {\n    try {\n      const response = await fetch('/api/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: projectName\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save new project');\n      }\n      console.log('New project saved successfully');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await saveNewProject(projectName);\n    onSave(projectName);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Project Name\",\n            value: projectName,\n            onChange: e => setProjectName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectFormModal, \"oRJBHfNKX3A30eUZXGpUZA/GcDk=\");\n_c = ProjectFormModal;\nexport default ProjectFormModal;\nvar _c;\n$RefreshReg$(_c, \"ProjectFormModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProjectFormModal","onClose","onSave","_s","projectName","setProjectName","saveNewProject","response","fetch","method","headers","body","JSON","stringify","name","ok","Error","console","log","error","handleSubmit","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["E:/Template/project_master_list/frontend/src/components/ProjectFormModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/ProjectFormModal.css';\r\n\r\nconst ProjectFormModal = ({ onClose, onSave }) => {\r\n  const [projectName, setProjectName] = useState('');\r\n\r\n  const saveNewProject = async (projectName) => {\r\n    try {\r\n      const response = await fetch('/api/projects', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: projectName }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save new project');\r\n      }\r\n      console.log('New project saved successfully');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await saveNewProject(projectName);\r\n    onSave(projectName);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>Add New Project</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Project Name'\r\n              value={projectName}\r\n              onChange={(e) => setProjectName(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" onClick={onClose}>Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectFormModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,cAAc,GAAG,MAAOF,WAAW,IAAK;IAC5C,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEV;QAAY,CAAC;MAC5C,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMhB,cAAc,CAACF,WAAW,CAAC;IACjCF,MAAM,CAACE,WAAW,CAAC;IACnBH,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEF,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BzB,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzB,OAAA;QAAAyB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB7B,OAAA;QAAM8B,QAAQ,EAAET,YAAa;QAAAI,QAAA,gBAC3BzB,OAAA;UAAAyB,QAAA,eACEzB,OAAA;YACE+B,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,cAAc;YAC1BC,KAAK,EAAE5B,WAAY;YACnB6B,QAAQ,EAAGC,CAAC,IAAK7B,cAAc,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAChDI,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACR7B,OAAA;UAAQ+B,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnC7B,OAAA;UAAQ+B,IAAI,EAAC,QAAQ;UAACO,OAAO,EAAEpC,OAAQ;UAAAuB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhDIH,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AAkDtB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}