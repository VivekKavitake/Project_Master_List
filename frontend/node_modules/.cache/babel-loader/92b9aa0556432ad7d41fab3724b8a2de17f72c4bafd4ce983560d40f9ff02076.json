{"ast":null,"code":"var _jsxFileName = \"E:\\\\Template\\\\project_master_list\\\\frontend\\\\src\\\\components\\\\ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport fetchProjectName from '../utils/fetchProjectName';\nimport '../styles/ProjectDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const [projectName, setProjectName] = useState('');\n  const [sections, setSections] = useState([]);\n  const [newSectionName, setNewSectionName] = useState('');\n  const [newSubsectionName, setNewSubsectionName] = useState('');\n  const [currentSectionId, setCurrentSectionId] = useState(null);\n  const [currentSubsectionId, setCurrentSubsectionId] = useState(null);\n  const [isSectionModalOpen, setIsSectionModalOpen] = useState(false);\n  const [isSubsectionModalOpen, setIsSubsectionModalOpen] = useState(false);\n  const [isDocumentModalOpen, setIsDocumentModalOpen] = useState(false);\n  const [newDocumentName, setNewDocumentName] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      if (projectId) {\n        const success = await fetchProjectDetails();\n        if (success) {\n          console.log('Details fetched');\n        } else {\n          console.log('No details fetched');\n        }\n      }\n    };\n    fetchData();\n  }, [projectId]);\n  const fetchProjectDetails = async () => {\n    try {\n      const projectName = await fetchProjectName(projectId);\n      setProjectName(projectName);\n      await fetchSections(Number(projectId));\n      return true;\n    } catch (error) {\n      console.error('Error fetching project details:', error);\n      return false;\n    }\n  };\n  const fetchSections = async numericProjectId => {\n    try {\n      const sectionsResponse = await axios.get(`http://localhost:5000/api/projects/${numericProjectId}/sections`);\n      const sectionsWithSubsections = await Promise.all(sectionsResponse.data.map(async section => {\n        const subsectionsResponse = await axios.get(`http://localhost:5000/api/sections/${section.section_id}/subsections`);\n        const subsectionsWithDocuments = await Promise.all(subsectionsResponse.data.map(async subsection => {\n          const documentsResponse = await axios.get(`http://localhost:5000/api/subsections/${subsection.subsection_id}/documents`);\n          return {\n            ...subsection,\n            documents: documentsResponse.data\n          };\n        }));\n        return {\n          ...section,\n          subsections: subsectionsWithDocuments\n        };\n      }));\n      setSections(sectionsWithSubsections);\n    } catch (error) {\n      console.error('Error fetching sections:', error);\n      throw error;\n    }\n  };\n  const refetchProjectDetails = async () => {\n    try {\n      const projectName = await fetchProjectName(projectId);\n      setProjectName(projectName);\n      await fetchSections(Number(projectId));\n    } catch (error) {\n      console.error('Error refetching project details:', error);\n    }\n  };\n  const handleAddSection = async () => {\n    try {\n      const numericProjectId = Number(projectId);\n      await axios.post('http://localhost:5000/api/sections', {\n        section_name: newSectionName,\n        project_id: numericProjectId\n      });\n      setNewSectionName('');\n      setIsSectionModalOpen(false);\n      refetchProjectDetails(); // Refetch project details\n    } catch (error) {\n      console.error('Error adding section:', error);\n    }\n  };\n  const handleAddSubsection = async () => {\n    try {\n      // Check if the selected section exists in the current project context\n      const sectionExists = sections.some(section => section.section_id === currentSectionId);\n      if (!sectionExists) {\n        console.error('Invalid section context');\n        return;\n      }\n\n      // Directly post the new subsection data\n      await axios.post('http://localhost:5000/api/subsections', {\n        subsection_name: newSubsectionName,\n        section_id: currentSectionId,\n        project_id: projectId\n      });\n\n      // Clear inputs and close modal\n      setNewSubsectionName('');\n      setIsSubsectionModalOpen(false);\n      refetchProjectDetails(); // Refetch project details\n    } catch (error) {\n      console.error('Error adding subsection:', error);\n    }\n  };\n  const handleSubmitDocument = async e => {\n    e.preventDefault();\n    try {\n      // Directly post the new document data\n      await axios.post('http://localhost:5000/api/documents', {\n        document_name: newDocumentName,\n        subsection_id: currentSubsectionId,\n        section_id: currentSectionId,\n        // Ensure this is the correct section_id\n        project_id: projectId // Ensure this is the correct project_id\n      });\n\n      // Clear inputs and close modal\n      setNewDocumentName('');\n      setIsDocumentModalOpen(false);\n      refetchProjectDetails(); // Refetch project details\n\n      // Notify user of success\n      alert('Document added successfully!');\n    } catch (error) {\n      console.error('Error adding document:', error);\n      // Notify user of the error\n      alert('Error adding document. Please try again.');\n    }\n  };\n  const handleDeleteSection = async sectionId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/sections/${sectionId}`);\n      refetchProjectDetails(); // Refetch project details\n    } catch (error) {\n      console.error('Error deleting section:', error);\n    }\n  };\n  const handleDeleteSubsection = async subsectionId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/subsections/${subsectionId}`);\n      refetchProjectDetails(); // Refetch project details\n    } catch (error) {\n      console.error('Error deleting subsection:', error);\n    }\n  };\n  const handleDeleteDocument = async (documentId, subsectionId) => {\n    try {\n      console.log('Deleting document with ID:', documentId, 'in subsection ID:', subsectionId);\n      await axios.delete(`http://localhost:5000/api/documents/${documentId}/${subsectionId}`);\n      refetchProjectDetails(); // Refetch project details\n    } catch (error) {\n      console.error('Error deleting document:', error);\n    }\n  };\n  const handleBack = () => {\n    navigate(-1);\n  };\n  const toggleSubsection = subsectionId => {\n    setCurrentSubsectionId(currentSubsectionId === subsectionId ? null : subsectionId);\n  };\n  const toggleSection = sectionId => {\n    setCurrentSectionId(currentSectionId === sectionId ? null : sectionId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Project Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"project-title\",\n      children: [\"Project Title: \", projectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      className: \"back-button\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSectionModalOpen(true),\n        className: \"add-button\",\n        children: \"Add Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this), sections.length > 0 ? sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"section-name\",\n          onClick: () => toggleSection(section.section_id),\n          children: [section.section_name, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteSection(section.section_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCurrentSectionId(section.section_id);\n            setIsSubsectionModalOpen(true);\n          },\n          className: \"add-button\",\n          children: \"Add Subsection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: currentSectionId === section.section_id ? \"subsection-container show\" : \"subsection-container hidden\",\n          children: section.subsections.length > 0 ? section.subsections.map(subsection => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"subsection-name\",\n              onClick: () => toggleSubsection(subsection.subsection_id),\n              children: [subsection.subsection_name, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDeleteSubsection(subsection.subsection_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setCurrentSubsectionId(subsection.subsection_id);\n                setIsDocumentModalOpen(true);\n              },\n              className: \"add-button\",\n              children: \"Add Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: currentSubsectionId === subsection.subsection_id ? \"document-container show\" : \"document-container hidden\",\n              children: subsection.documents.length > 0 ? subsection.documents.map(document => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"document\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [document.serial_number, \"-\", document.document_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 31\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => handleDeleteDocument(document.document_id, subsection.subsection_id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 29\n                }, this)]\n              }, document.document_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No documents available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 23\n            }, this)]\n          }, subsection.subsection_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No subsections available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this)]\n      }, section.section_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No sections available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), isSectionModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newSectionName,\n            onChange: e => setNewSectionName(e.target.value),\n            placeholder: \"Section Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddSection,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSectionModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), isSubsectionModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Subsection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newSubsectionName,\n            onChange: e => setNewSubsectionName(e.target.value),\n            placeholder: \"Subsection Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddSubsection,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSubsectionModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), isDocumentModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitDocument,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newDocumentName,\n              onChange: e => setNewDocumentName(e.target.value),\n              placeholder: \"Document Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsDocumentModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"mLluRUbUrbY57N1KQTJAIa98F9M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","fetchProjectName","jsxDEV","_jsxDEV","ProjectDetail","_s","projectId","navigate","projectName","setProjectName","sections","setSections","newSectionName","setNewSectionName","newSubsectionName","setNewSubsectionName","currentSectionId","setCurrentSectionId","currentSubsectionId","setCurrentSubsectionId","isSectionModalOpen","setIsSectionModalOpen","isSubsectionModalOpen","setIsSubsectionModalOpen","isDocumentModalOpen","setIsDocumentModalOpen","newDocumentName","setNewDocumentName","fetchData","success","fetchProjectDetails","console","log","fetchSections","Number","error","numericProjectId","sectionsResponse","get","sectionsWithSubsections","Promise","all","data","map","section","subsectionsResponse","section_id","subsectionsWithDocuments","subsection","documentsResponse","subsection_id","documents","subsections","refetchProjectDetails","handleAddSection","post","section_name","project_id","handleAddSubsection","sectionExists","some","subsection_name","handleSubmitDocument","e","preventDefault","document_name","alert","handleDeleteSection","sectionId","delete","handleDeleteSubsection","subsectionId","handleDeleteDocument","documentId","handleBack","toggleSubsection","toggleSection","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","document","serial_number","document_id","type","value","onChange","target","placeholder","required","onSubmit","_c","$RefreshReg$"],"sources":["E:/Template/project_master_list/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport fetchProjectName from '../utils/fetchProjectName';\r\nimport '../styles/ProjectDetail.css';\r\n\r\nconst ProjectDetail = () => {\r\n  const { projectId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [projectName, setProjectName] = useState('');\r\n  const [sections, setSections] = useState([]);\r\n  const [newSectionName, setNewSectionName] = useState('');\r\n  const [newSubsectionName, setNewSubsectionName] = useState('');\r\n  const [currentSectionId, setCurrentSectionId] = useState(null);\r\n  const [currentSubsectionId, setCurrentSubsectionId] = useState(null);\r\n  const [isSectionModalOpen, setIsSectionModalOpen] = useState(false);\r\n  const [isSubsectionModalOpen, setIsSubsectionModalOpen] = useState(false);\r\n  const [isDocumentModalOpen, setIsDocumentModalOpen] = useState(false);\r\n  const [newDocumentName, setNewDocumentName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (projectId) {\r\n        const success = await fetchProjectDetails();\r\n        if (success) {\r\n          console.log('Details fetched');\r\n        } else {\r\n          console.log('No details fetched');\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [projectId]);\r\n\r\n  const fetchProjectDetails = async () => {\r\n    try {\r\n      const projectName = await fetchProjectName(projectId);\r\n      setProjectName(projectName);\r\n      await fetchSections(Number(projectId));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error fetching project details:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const fetchSections = async (numericProjectId) => {\r\n    try {\r\n      const sectionsResponse = await axios.get(`http://localhost:5000/api/projects/${numericProjectId}/sections`);\r\n      const sectionsWithSubsections = await Promise.all(sectionsResponse.data.map(async (section) => {\r\n        const subsectionsResponse = await axios.get(`http://localhost:5000/api/sections/${section.section_id}/subsections`);\r\n        const subsectionsWithDocuments = await Promise.all(subsectionsResponse.data.map(async (subsection) => {\r\n          const documentsResponse = await axios.get(`http://localhost:5000/api/subsections/${subsection.subsection_id}/documents`);\r\n          return { ...subsection, documents: documentsResponse.data };\r\n        }));\r\n        return { ...section, subsections: subsectionsWithDocuments };\r\n      }));\r\n      setSections(sectionsWithSubsections);\r\n    } catch (error) {\r\n      console.error('Error fetching sections:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const refetchProjectDetails = async () => {\r\n    try {\r\n      const projectName = await fetchProjectName(projectId);\r\n      setProjectName(projectName);\r\n      await fetchSections(Number(projectId));\r\n    } catch (error) {\r\n      console.error('Error refetching project details:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSection = async () => {\r\n    try {\r\n      const numericProjectId = Number(projectId);\r\n      await axios.post('http://localhost:5000/api/sections', { section_name: newSectionName, project_id: numericProjectId });\r\n      setNewSectionName('');\r\n      setIsSectionModalOpen(false);\r\n      refetchProjectDetails(); // Refetch project details\r\n    } catch (error) {\r\n      console.error('Error adding section:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSubsection = async () => {\r\n    try {\r\n      // Check if the selected section exists in the current project context\r\n      const sectionExists = sections.some(section => section.section_id === currentSectionId);\r\n      if (!sectionExists) {\r\n        console.error('Invalid section context');\r\n        return;\r\n      }\r\n  \r\n      // Directly post the new subsection data\r\n      await axios.post('http://localhost:5000/api/subsections', {\r\n        subsection_name: newSubsectionName,\r\n        section_id: currentSectionId,\r\n        project_id: projectId\r\n      });\r\n  \r\n      // Clear inputs and close modal\r\n      setNewSubsectionName('');\r\n      setIsSubsectionModalOpen(false);\r\n      refetchProjectDetails(); // Refetch project details\r\n    } catch (error) {\r\n      console.error('Error adding subsection:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitDocument = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      // Directly post the new document data\r\n      await axios.post('http://localhost:5000/api/documents', {\r\n        document_name: newDocumentName,\r\n        subsection_id: currentSubsectionId,\r\n        section_id: currentSectionId, // Ensure this is the correct section_id\r\n        project_id: projectId // Ensure this is the correct project_id\r\n      });\r\n  \r\n      // Clear inputs and close modal\r\n      setNewDocumentName('');\r\n      setIsDocumentModalOpen(false);\r\n      refetchProjectDetails(); // Refetch project details\r\n  \r\n      // Notify user of success\r\n      alert('Document added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding document:', error);\r\n      // Notify user of the error\r\n      alert('Error adding document. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteSection = async (sectionId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/sections/${sectionId}`);\r\n      refetchProjectDetails(); // Refetch project details\r\n    } catch (error) {\r\n      console.error('Error deleting section:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSubsection = async (subsectionId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/subsections/${subsectionId}`);\r\n      refetchProjectDetails(); // Refetch project details\r\n    } catch (error) {\r\n      console.error('Error deleting subsection:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDocument = async (documentId, subsectionId) => {\r\n    try {\r\n      console.log('Deleting document with ID:', documentId, 'in subsection ID:', subsectionId);\r\n      await axios.delete(`http://localhost:5000/api/documents/${documentId}/${subsectionId}`);\r\n      refetchProjectDetails(); // Refetch project details\r\n    } catch (error) {\r\n      console.error('Error deleting document:', error);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const toggleSubsection = (subsectionId) => {\r\n    setCurrentSubsectionId(currentSubsectionId === subsectionId ? null : subsectionId);\r\n  };\r\n\r\n  const toggleSection = (sectionId) => {\r\n    setCurrentSectionId(currentSectionId === sectionId ? null : sectionId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-detail-container\">\r\n      <h1 style={{ textAlign: \"center\" }}>Project Details</h1>\r\n      <h2 className=\"project-title\">Project Title: {projectName}</h2>\r\n      <button onClick={handleBack} className=\"back-button\">Back</button>\r\n\r\n      <div className=\"sections-container\">\r\n      <button onClick={() => setIsSectionModalOpen(true)} className=\"add-button\">Add Section</button>\r\n        {sections.length > 0 ? (\r\n          sections.map(section => (\r\n            <div key={section.section_id} className=\"section\">\r\n              <button className=\"section-name\" onClick={() => toggleSection(section.section_id)}>\r\n                {section.section_name}\r\n                <button className=\"delete-button\" onClick={() => handleDeleteSection(section.section_id)}>Delete</button>\r\n              </button>\r\n              <button onClick={() => { setCurrentSectionId(section.section_id); setIsSubsectionModalOpen(true); }} className=\"add-button\">Add Subsection</button>\r\n\r\n              <div className={currentSectionId === section.section_id ? \"subsection-container show\" : \"subsection-container hidden\"}>\r\n                {section.subsections.length > 0 ? (\r\n                  section.subsections.map(subsection => (\r\n                    <div key={subsection.subsection_id} className=\"subsection\">\r\n                      <button className=\"subsection-name\" onClick={() => toggleSubsection(subsection.subsection_id)}>\r\n                        {subsection.subsection_name} \r\n                        <button className=\"delete-button\" onClick={() => handleDeleteSubsection(subsection.subsection_id)}>Delete</button>\r\n                        </button>\r\n                      <button onClick={() => { setCurrentSubsectionId(subsection.subsection_id); setIsDocumentModalOpen(true); }} className=\"add-button\">Add Document</button>\r\n\r\n                      <div className={currentSubsectionId === subsection.subsection_id ? \"document-container show\" : \"document-container hidden\"}>\r\n                        {subsection.documents.length > 0 ? (subsection.documents.map(document => (\r\n                            <div key={document.document_id} className=\"document\">\r\n                              <p>{document.serial_number}-{document.document_name}</p> {/* Display serial number */}\r\n                            <button className=\"delete-button\" onClick={() => handleDeleteDocument(document.document_id, subsection.subsection_id)}>Delete</button>\r\n                        </div>\r\n                          ))\r\n                          ) : (\r\n                              <p>No documents available.</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>No subsections available.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No sections available.</p>\r\n        )}\r\n      </div>\r\n\r\n      {isSectionModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className='modal'>\r\n          <div className=\"modal-content\">\r\n            <h2>Add Section</h2>\r\n            <input type=\"text\" value={newSectionName} onChange={(e) => setNewSectionName(e.target.value)} placeholder=\"Section Name\" required/>\r\n            <button onClick={handleAddSection}>Add</button>\r\n            <button onClick={() => setIsSectionModalOpen(false)}>Cancel</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isSubsectionModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className='modal'>\r\n          <div className=\"modal-content\">\r\n            <h2>Add Subsection</h2>\r\n            <input type=\"text\" value={newSubsectionName} onChange={(e) => setNewSubsectionName(e.target.value)} placeholder=\"Subsection Name\" required/>\r\n            <button onClick={handleAddSubsection}>Add</button>\r\n            <button onClick={() => setIsSubsectionModalOpen(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      )}\r\n\r\n      {isDocumentModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className='modal'>\r\n          <div className=\"modal-content\">\r\n            <h2>Add Document</h2>\r\n            <form onSubmit={handleSubmitDocument}>\r\n              <input type=\"text\" value={newDocumentName} onChange={(e) => setNewDocumentName(e.target.value)} placeholder=\"Document Name\" required/>\r\n              <button type=\"submit\">Add</button>\r\n            </form>\r\n            <button onClick={() => setIsDocumentModalOpen(false)}>Cancel</button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}