{"ast":null,"code":"var _jsxFileName = \"E:\\\\Template\\\\project_master_list\\\\frontend\\\\src\\\\components\\\\ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/ProjectDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectName\n  } = useParams();\n  const navigate = useNavigate();\n  const [sections, setSections] = useState([]);\n  const [subsections, setSubsections] = useState({});\n  const [newSubsectionName, setNewSubsectionName] = useState('');\n  useEffect(() => {\n    fetchSections();\n  }, []);\n  const fetchSections = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/projects/${projectName}/sections`);\n      setSections(response.data);\n      const subs = {};\n      response.data.forEach(section => {\n        subs[section.section_id] = [];\n      });\n      setSubsections(subs);\n    } catch (error) {\n      console.error('Error fetching sections:', error);\n    }\n  };\n  const handleAddDocument = async sectionId => {\n    const docName = prompt('Enter document name:');\n    if (docName) {\n      try {\n        const response = await axios.post('http://localhost:5000/api/documents', {\n          document_name: docName,\n          subsection_id: sectionId\n        });\n        setSubsections(prev => ({\n          ...prev,\n          [sectionId]: [...prev[sectionId], response.data]\n        }));\n      } catch (error) {\n        console.error('Error adding document:', error);\n      }\n    }\n  };\n  const handleAddSectionAndSubsection = async () => {\n    try {\n      // Add Section\n      const sectionResponse = await axios.post('http://localhost:5000/api/sections', {\n        section_name: 'System Engineering',\n        project_name: projectName\n      });\n      const newSectionId = sectionResponse.data.section_id;\n\n      // Add Subsection\n      const subsectionResponse = await axios.post('http://localhost:5000/api/subsections', {\n        subsection_name: 'mech',\n        section_id: newSectionId\n      });\n      const newSubsection = subsectionResponse.data;\n\n      // Fetch sections again to update state\n      fetchSections();\n    } catch (error) {\n      console.error('Error adding section and subsection:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Project Title: \", projectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-section-btn\",\n      onClick: handleAddSectionAndSubsection,\n      children: \"Add Section and Subsection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), sections.map(section => /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: section.section_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subsection-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: subsections[section.section_id] && subsections[section.section_id].map((doc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: doc.document_name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-document-btn\",\n          onClick: () => handleAddDocument(section.section_id),\n          children: \"Add Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, section.section_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"HY43lSc/666JBwVckBMYf0Dn1jk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ProjectDetail","_s","projectName","navigate","sections","setSections","subsections","setSubsections","newSubsectionName","setNewSubsectionName","fetchSections","response","get","data","subs","forEach","section","section_id","error","console","handleAddDocument","sectionId","docName","prompt","post","document_name","subsection_id","prev","handleAddSectionAndSubsection","sectionResponse","section_name","project_name","newSectionId","subsectionResponse","subsection_name","newSubsection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","doc","index","_c","$RefreshReg$"],"sources":["E:/Template/project_master_list/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/ProjectDetail.css';\r\n\r\nconst ProjectDetail = () => {\r\n  const { projectName } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [sections, setSections] = useState([]);\r\n  const [subsections, setSubsections] = useState({});\r\n  const [newSubsectionName, setNewSubsectionName] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchSections();\r\n  }, []);\r\n\r\n  const fetchSections = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/projects/${projectName}/sections`);\r\n      setSections(response.data);\r\n      const subs = {};\r\n      response.data.forEach(section => {\r\n        subs[section.section_id] = [];\r\n      });\r\n      setSubsections(subs);\r\n    } catch (error) {\r\n      console.error('Error fetching sections:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddDocument = async (sectionId) => {\r\n    const docName = prompt('Enter document name:');\r\n    if (docName) {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/documents', { document_name: docName, subsection_id: sectionId });\r\n        setSubsections(prev => ({\r\n          ...prev,\r\n          [sectionId]: [...prev[sectionId], response.data],\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error adding document:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddSectionAndSubsection = async () => {\r\n    try {\r\n      // Add Section\r\n      const sectionResponse = await axios.post('http://localhost:5000/api/sections', { section_name: 'System Engineering', project_name: projectName });\r\n      const newSectionId = sectionResponse.data.section_id;\r\n\r\n      // Add Subsection\r\n      const subsectionResponse = await axios.post('http://localhost:5000/api/subsections', { subsection_name: 'mech', section_id: newSectionId });\r\n      const newSubsection = subsectionResponse.data;\r\n\r\n      // Fetch sections again to update state\r\n      fetchSections();\r\n    } catch (error) {\r\n      console.error('Error adding section and subsection:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"project-detail\">\r\n      <h2>Project Detail</h2>\r\n      <p>Project Title: {projectName}</p>\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n\r\n      <h3>Sections</h3>\r\n      <button className=\"add-section-btn\" onClick={handleAddSectionAndSubsection}>\r\n        Add Section and Subsection\r\n      </button>\r\n      {sections.map(section => (\r\n        <details key={section.section_id} className=\"section\">\r\n          <summary>\r\n            {section.section_name}\r\n          </summary>\r\n          <div className=\"subsection-content\">\r\n            <ul>\r\n              {subsections[section.section_id] && subsections[section.section_id].map((doc, index) => (\r\n                <li key={index}>\r\n                  {doc.document_name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <button className=\"add-document-btn\" onClick={() => handleAddDocument(section.section_id)}>\r\n              Add Document\r\n            </button>\r\n          </div>\r\n        </details>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAY,CAAC,GAAGP,SAAS,CAAC,CAAC;EACnC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACdgB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsCV,WAAW,WAAW,CAAC;MAC9FG,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC1B,MAAMC,IAAI,GAAG,CAAC,CAAC;MACfH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAACC,OAAO,IAAI;QAC/BF,IAAI,CAACE,OAAO,CAACC,UAAU,CAAC,GAAG,EAAE;MAC/B,CAAC,CAAC;MACFV,cAAc,CAACO,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,SAAS,IAAK;IAC7C,MAAMC,OAAO,GAAGC,MAAM,CAAC,sBAAsB,CAAC;IAC9C,IAAID,OAAO,EAAE;MACX,IAAI;QACF,MAAMX,QAAQ,GAAG,MAAMd,KAAK,CAAC2B,IAAI,CAAC,qCAAqC,EAAE;UAAEC,aAAa,EAAEH,OAAO;UAAEI,aAAa,EAAEL;QAAU,CAAC,CAAC;QAC9Hd,cAAc,CAACoB,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACN,SAAS,GAAG,CAAC,GAAGM,IAAI,CAACN,SAAS,CAAC,EAAEV,QAAQ,CAACE,IAAI;QACjD,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EAED,MAAMU,6BAA6B,GAAG,MAAAA,CAAA,KAAY;IAChD,IAAI;MACF;MACA,MAAMC,eAAe,GAAG,MAAMhC,KAAK,CAAC2B,IAAI,CAAC,oCAAoC,EAAE;QAAEM,YAAY,EAAE,oBAAoB;QAAEC,YAAY,EAAE7B;MAAY,CAAC,CAAC;MACjJ,MAAM8B,YAAY,GAAGH,eAAe,CAAChB,IAAI,CAACI,UAAU;;MAEpD;MACA,MAAMgB,kBAAkB,GAAG,MAAMpC,KAAK,CAAC2B,IAAI,CAAC,uCAAuC,EAAE;QAAEU,eAAe,EAAE,MAAM;QAAEjB,UAAU,EAAEe;MAAa,CAAC,CAAC;MAC3I,MAAMG,aAAa,GAAGF,kBAAkB,CAACpB,IAAI;;MAE7C;MACAH,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BtC,OAAA;MAAAsC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1C,OAAA;MAAAsC,QAAA,GAAG,iBAAe,EAACnC,WAAW;IAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC1C,OAAA;MAAQ2C,OAAO,EAAEA,CAAA,KAAMvC,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAAkC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElD1C,OAAA;MAAAsC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB1C,OAAA;MAAQqC,SAAS,EAAC,iBAAiB;MAACM,OAAO,EAAEd,6BAA8B;MAAAS,QAAA,EAAC;IAE5E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRrC,QAAQ,CAACuC,GAAG,CAAC3B,OAAO,iBACnBjB,OAAA;MAAkCqC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACnDtC,OAAA;QAAAsC,QAAA,EACGrB,OAAO,CAACc;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACV1C,OAAA;QAAKqC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCtC,OAAA;UAAAsC,QAAA,EACG/B,WAAW,CAACU,OAAO,CAACC,UAAU,CAAC,IAAIX,WAAW,CAACU,OAAO,CAACC,UAAU,CAAC,CAAC0B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACjF9C,OAAA;YAAAsC,QAAA,EACGO,GAAG,CAACnB;UAAa,GADXoB,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACL1C,OAAA;UAAQqC,SAAS,EAAC,kBAAkB;UAACM,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAACJ,OAAO,CAACC,UAAU,CAAE;UAAAoB,QAAA,EAAC;QAE3F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,GAfMzB,OAAO,CAACC,UAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBvB,CACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxC,EAAA,CAzFID,aAAa;EAAA,QACOL,SAAS,EAChBC,WAAW;AAAA;AAAAkD,EAAA,GAFxB9C,aAAa;AA2FnB,eAAeA,aAAa;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}